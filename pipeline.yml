---
jobs:
- name: deploy-discourse-staging
  serial: true
  plan:
  - aggregate:
    - get: discourse-config
      trigger: true
    - get: discourse
      trigger: true
  - task: compile-assets
    file: discourse-config/compile.yml
  - aggregate:
    - put: deploy-community-staging
      params:
        manifest: discourse-config/manifest-staging-app.yml
        path: discourse-compiled
        current_app_name: community-staging
        environment_variables:
          ADMIN_EMAIL: {{admin-email-staging}}
    - put: deploy-community-staging
      params:
        manifest: discourse-config/manifest-staging-worker.yml
        path: discourse-compiled
        current_app_name: community-staging-worker
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy discourse on {{cf-api-staging}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed discourse on {{cf-api-staging}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-discourse-production
  serial: true
  plan:
  - aggregate:
    - get: discourse-config
      passed: [deploy-discourse-staging]
      trigger: true
    - get: discourse
      passed: [deploy-discourse-staging]
      trigger: true
  - task: compile-assets
    file: discourse-config/compile.yml
  - aggregate:
    - put: deploy-community-production
      params:
        manifest: discourse-config/manifest-prod-app.yml
        path: discourse-compiled
        current_app_name: community-production
        environment_variables:
          ADMIN_EMAIL: {{admin-email-production}}
    - put: deploy-community-production
      params:
        manifest: discourse-config/manifest-prod-worker.yml
        path: discourse-compiled
        current_app_name: community-production-worker
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy discourse on {{cf-api-production}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed discourse on {{cf-api-production}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: discourse
  type: git
  source:
    uri: {{discourse-git-url}}
    branch: {{discourse-git-branch}}

- name: discourse-config
  type: git
  source:
    uri: {{discourse-config-git-url}}
    branch: {{discourse-config-git-branch}}

- name: deploy-community-staging
  type: cf
  source:
    api: {{cf-api-staging}}
    username: {{cf-username-staging}}
    password: {{cf-password-staging}}
    organization: {{cf-organization-staging}}
    space: {{cf-space-staging}}

- name: deploy-community-production
  type: cf
  source:
    api: {{cf-api-production}}
    username: {{cf-username-production}}
    password: {{cf-password-production}}
    organization: {{cf-organization-production}}
    space: {{cf-space-production}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
